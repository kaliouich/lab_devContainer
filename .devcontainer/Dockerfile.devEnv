FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

# Add deadsnakes PPA for Python 3.12
RUN apt-get update && apt-get install -y software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update 

# Split the installation commands to better identify issues
RUN apt-get install -y \
        apt-transport-https \
        curl \
        git \
        gnupg \
        groff \
        less \
        sudo \
        unzip \
        wget \
        ca-certificates \
        jq \
        bash \
        bash-completion

# Remove any existing Python installations and install only Python 3.12
RUN apt-get remove -y python3 python3-pip python3-dev && \
    apt-get autoremove -y && \
    apt-get install -y \
        python3.12 \
        python3.12-venv \
        python3.12-dev \
    && rm -rf /var/lib/apt/lists/* && \
    ln -sf /usr/bin/python3.12 /usr/bin/python3 && \
    ln -sf /usr/bin/python3.12 /usr/bin/python

# Install pip for Python 3.12
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12

# Set Python environment variables
ENV PATH="${PATH}"
ENV PYTHONPATH="/usr/local/lib/python3.12/dist-packages:/usr/lib/python3.12/dist-packages:${PYTHONPATH:-}"

# Install git-remote-codecommit and jinja2
RUN pip3 install git-remote-codecommit jinja2

# Install Terraform
RUN wget -q https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip && \
    unzip terraform_1.6.0_linux_amd64.zip -d /usr/local/bin/ && \
    chmod +x /usr/local/bin/terraform && \
    rm terraform_1.6.0_linux_amd64.zip

# Install kubectl
RUN curl -fsSLo /usr/local/bin/kubectl "https://dl.k8s.io/release/$(curl -fsSL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
    chmod +x /usr/local/bin/kubectl

# Install Helm
RUN curl -fsSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

# Install Docker
RUN apt-get update && \
    apt-get install -y \
        docker.io \
        && rm -rf /var/lib/apt/lists/*

# Create a non-root user (optional, can be adjusted as per your needs)
ARG USERNAME=developer
ARG USER_UID=1000
ARG USER_GID=1000

RUN if [ $USERNAME != root ]; then \
        groupadd --gid $USER_GID $USERNAME && \
        useradd --uid $USER_UID --gid $USER_GID -m $USERNAME && \
        echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME && \
        chmod 0440 /etc/sudoers.d/$USERNAME &&\
        chsh -s /bin/bash $USERNAME && \
        echo 'source /etc/profile.d/bash_completion.sh' >> /home/$USERNAME/.bashrc && \
        echo 'export PS1="\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ "' >> /home/$USERNAME/.bashrc; \
    fi

# Clean up unnecessary files and caches
RUN apt-get clean && apt-get autoremove -y

# Switch to the non-root user (optional)
USER $USERNAME

# Set up a working directory
WORKDIR /home/$USERNAME
